def line_x_circle(line, C, R):
    """
    Проверка пересечения линий области с окружностью
    :param line: Линии
    :param C: координаты центра окружности
    :param R: радиус окружности
    :return: true или false
    """
    A, B = line
    x1, y1 = A
    x2, y2 = B
    xC, yC = C

    x1 -= xC
    y1 -= yC
    x2 -= xC
    y2 -= yC

    dx = x2 - x1
    dy = y2 - y1

    # составляем коэффициенты квадратного уравнения на пересечение прямой и окружности.
    # если на отрезке [0..1] есть отрицательные значения, значит отрезок пересекает окружность
    a = dx * dx + dy * dy
    b = 2 * (x1 * dx + y1 * dy)
    c = x1 * x1 + y1 * y1 - R * R

    # а теперь проверяем, есть ли на отрезке [0..1] решения
    if -b < 0:      return c < 0
    if -b < 2 * a:  return 4 * a * c - b ** 2 < 0

    return a + b + c < 0


def line_x_line(lineA, lineB):
    """
    Проверка пересечения двух линий
    :param lineA: первая линия
    :param lineB: вторая линия
    :return: true или false
    """
    # подготовка имен переменных
    class point:
        def __init__(self, x, y):
            self.x = x
            self.y = y

    p1, p2 = point(*lineA[0]), point(*lineA[1])
    p3, p4 = point(*lineB[0]), point(*lineB[1])

    # сначала расставим точки в отрезках по порядку, т.е. чтобы было p1.x <= p2.x
    #    D-------C    B----------A
    #    C---------D    A------B
    if (p2.x < p1.x): p1, p2 = p2, p1
    if (p4.x < p3.x): p3, p4 = p4, p3
    # теперь расставим по порядку сами отрезки. за AB возьмем тот отрезок что левее, а за  CD тот что правее
    if (p1.x > p3.x):   p1, p2, p3, p4 = p3, p4, p1, p2

    # ИТОГО ПРИМЕР:
    # было      [   D----------C B-----A     ]
    # подгтовка [   C----------D A-----B     ]
    #  стало:  [   A----------B C-----D     ]
    # таковые теперь проекции отрезков на x именованные и упорядоченные
    AminX = p1.x
    AmaxX = p2.x
    BminX = p3.x
    BmaxX = p4.x

    # прикинем  проекции отрезков на y
    Amaxy = max(p1.y, p2.y)
    Aminy = min(p1.y, p2.y)
    Bmaxy = max(p3.y, p4.y)
    Bminy = min(p3.y, p4.y)

    #  ПРОЕКЦИИ    - ЕСЛИ НЕТ НИЧЕГО ОБЩЕГО НИ ПО x ни по y, даление
    # равносильно тому же по сути - когда коллайд боксы двух обьектов не имеют пересечния
    # исключим случай когда у отрезков нет ничего общего в проекции к x или к y
    # то есть слишком далеко друг от друга с пустым пробелом между ними по иксам или по игрекам
    if AmaxX < BminX or BmaxX < AminX: return False  # отрезков нет взаимной абсциссы
    if Bminy > Amaxy or Aminy > Bmaxy:   return False  # отрезков нет взаимной ординаты

    # если оба отрезка вертикальные
    if (p1.x - p2.x) == 0 and (p3.x - p4.x) == 0:

        # то только если они лежат на одном X они могу пересекатся
        if p1.x == p3.x:

            # докажем что имеется общий Y
            # для этого возьмём отрицание от случая, когда они НЕ пересекаются
            _f1 = Amaxy < Bminy
            _f2 = Aminy > Bmaxy
            if not (_f1 or _f2): return True
        # если не пересеклись то выходим
        return False

    # найдём коэффициенты уравнений, содержащих отрезки

    # ----исход1--------------
    # если первый отрезок вертикальный
    if p1.x - p2.x == 0:

        # найдём Xa, Ya - точки пересечения двух прямых
        Xa = p1.x
        A2 = (p3.y - p4.y) / (p3.x - p4.x)
        b2 = p3.y - A2 * p3.x
        Ya = A2 * Xa + b2

        if Xa >= p3.x and Xa <= p4.x and Ya >= Aminy and Ya <= Amaxy:
            return True
        return False
    # ---------------------------

    # ----исход2--------------
    # если второй отрезок вертикальный
    if p3.x - p4.x == 0:

        # найдём Xa, Ya - точки пересечения двух прямых
        Xa = p3.x
        A1 = (p1.y - p2.y) / (p1.x - p2.x)
        b1 = p1.y - A1 * p1.x
        Ya = A1 * Xa + b1

        if p1.x <= Xa and p2.x >= Xa and Bminy <= Ya and Bmaxy >= Ya:
            return True
        return False
    # ---------------------------

    # --------исход3--------------
    # оба отрезка невертикальные
    A1 = (p1.y - p2.y) / (p1.x - p2.x)
    A2 = (p3.y - p4.y) / (p3.x - p4.x)
    b1 = p1.y - A1 * p1.x
    b2 = p3.y - A2 * p3.x

    # отрезки параллельны
    # мм.. а какова дознаковая точность сравнения?
    if A1 == A2:
        return False  # не согласна что это исход.  а если наложение

    # Xa - абсцисса точки пересечения двух прямых
    Xa = (b2 - b1) / (A1 - A2)

    if Xa < max(p1.x, p3.x) or Xa > min(p2.x, p4.x):
        return False  # точка Xa находится вне пересечения проекций отрезков на ось X
    return True
